# -*- mode: ruby -*-
# vi: set ft=ruby :

# Specify minimum Vagrant version and Vagrant API version
Vagrant.require_version '>= 1.6.0'

# Require 'yaml' module
require 'yaml'

# Read YAML file with VM details (box, CPU, RAM, IP addresses)
# Edit machines.yml to change VM configuration details
machines = YAML.load_file(File.join(File.dirname(__FILE__), 'machines.yml'))

# Create and configure the VMs
Vagrant.configure("2") do |config|

  # Always use Vagrant's default insecure key
  config.ssh.insert_key = false

  # Ensure the following plugins are installed
  #config.vagrant.plugins = ["vagrant-hosts"]

  # Iterate through entries in YAML file to create VMs
  machines.each do |machine|

    # Configure the VMs per details in machines.yml
    config.vm.define machine['name'] do |srv|

      # Don't check for box updates
      srv.vm.box_check_update = false

      # Specify the hostname of the VM
      srv.vm.hostname = machine['name']

      # Specify the Vagrant box to use
      srv.vm.box = machine['box']['vb']

      # Configure default synced folder (disable by default)
      if machine['sync_disabled'] != nil
        srv.vm.synced_folder '.', '/vagrant', disabled: machine['sync_disabled']
      else
        srv.vm.synced_folder '.', '/vagrant', disabled: true
      end #if machine['sync_disabled']

      # Iterate through networks as per settings in machines.yml
      machine['nics'].each do |net|
        if net['ip_addr'] == 'dhcp'
          srv.vm.network net['type'], type: net['ip_addr']
        else
          srv.vm.network net['type'], ip: net['ip_addr']
        end # if net['ip_addr']
      end # machine['nics'].each

      # Iterate through ports as per settings in machines.yml
      if machine['ports'] != nil
        machine['ports'].each do |port|
          if port['host_port'] != nil
            srv.vm.network "forwarded_port", guest: port['guest_port'], host: port['host_port']
          else
            srv.vm.network "forwarded_port", guest: port['guest_port'], host: port['guest_port']
          end # if port['host_port']
        end # machine['ports'].each
      end # if machine['ports']

      # Configure CPU & RAM per settings in machines.yml (VirtualBox)
      srv.vm.provider 'virtualbox' do |vb|
        vb.memory = machine['ram']
        vb.cpus = machine['vcpu']
      end # srv.vm.provider 'virtualbox'
    end # config.vm.define
  end # machines.each

  # Provision all systems using Ansible
  config.vm.provision 'ansible' do |ansible|
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "provision/playbook.yml"
    ansible.galaxy_role_file = "provision/requirements.yml"
    ansible.config_file = "provision/ansible.cfg"
    ansible.become = true
  end # config.vm.provision
end # Vagrant.configure